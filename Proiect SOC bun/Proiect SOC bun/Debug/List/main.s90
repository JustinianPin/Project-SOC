///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V7.10.1.1197 for Atmel AVR          12/Jan/2024  09:43:16
// Copyright 1996-2017 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for Atmel AVR
//
//    Source file  =  C:\Users\justi\OneDrive\Desktop\Proiect SOC bun\main.c
//    Command line =  
//        -f C:\Users\justi\AppData\Local\Temp\EWDE2D.tmp
//        ("C:\Users\justi\OneDrive\Desktop\Proiect SOC bun\main.c" --cpu=m16
//        -ms -o "C:\Users\justi\OneDrive\Desktop\Proiect SOC bun\Debug\Obj"
//        -lC "C:\Users\justi\OneDrive\Desktop\Proiect SOC bun\Debug\List" -lA
//        "C:\Users\justi\OneDrive\Desktop\Proiect SOC bun\Debug\List"
//        --initializers_in_flash --no_cse --no_inline --no_code_motion
//        --no_cross_call --no_clustering --no_tbaa --debug
//        -DENABLE_BIT_DEFINITIONS -e --eeprom_size 512 --clib -On)
//    Locale       =  English_USA.1252
//    List file    =  
//        C:\Users\justi\OneDrive\Desktop\Proiect SOC bun\Debug\List\main.s90
//
///////////////////////////////////////////////////////////////////////////////

        NAME main

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__cpu", "3"
        RTMODEL "__cpu_name", "ATmega16"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"
        RTMODEL "__vtable_memory", "__nearflash"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        PUBLIC main
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
        EXTERN add_func
        EXTERN factorial_func

// C:\Users\justi\OneDrive\Desktop\Proiect SOC bun\main.c
//    1 typedef unsigned char byte;
//    2 
//    3 
//    4 extern byte add_func(byte a, byte b);
//    5 extern byte factorial_func(byte n);
//    6 

        RSEG CODE:CODE:NOROOT(1)
//    7 void main() {
main:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function main
        ST      -Y, R24
          CFI R24 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
//    8   
//    9   byte result_1 = add_func(5, 3);
        LDI     R17, 3
        LDI     R16, 5
          CFI FunCall add_func
        CALL    add_func
        MOV     R24, R16
//   10   byte result_2 = factorial_func(5);
        LDI     R16, 5
          CFI FunCall factorial_func
        CALL    factorial_func
//   11   
//   12   while (1);
??main_0:
        RJMP    ??main_0
//   13 }
          CFI EndBlock cfiBlock0

        ASEGN ABSOLUTE:DATA:NOROOT,01cH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,01dH
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,01eH
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EEARH:

        END
// 
// 20 bytes in segment CODE
// 
// 20 bytes of CODE memory
//
//Errors: none
//Warnings: none
